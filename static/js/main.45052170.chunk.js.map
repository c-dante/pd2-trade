{"version":3,"sources":["D2Item.tsx","util.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ItemStat","stat","statClass","classNames","corrupted","rangeSuffix","range","className","min","max","undefined","level","skill","name","value","applySettings","item","settings","hideQuality","quality","hideSockets","sockets","set","hideSets","type","hideType","D2Item","isEthereal","onClick","console","log","hideProps","defense","stats","map","i","emptyStats","types","Map","qualities","sets","count","tally","get","Stash","stash","useState","collapse","setCollapse","file","style","float","error","String","idx","toId","str","toLowerCase","replace","VarFilter","prefix","toggles","onToggle","entries","htmlFor","id","checked","onChange","FilterMenu","setSettings","newVal","App","useDropzone","accept","noClick","noKeyboard","acceptedFiles","getRootProps","getInputProps","isDragActive","open","useAsync","promises","Promise","res","reader","FileReader","onload","evt","target","JSON","parse","result","onerror","abort","readAsText","all","loading","useMemo","flatMap","v","reduce","acc","mutStat","computeStats","length","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45052170.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport type { Item, Settings, Stat } from './util';\n\ninterface ItemStatProps {\n\tstat: Stat;\n};\nconst ItemStat: FC<ItemStatProps> = ({ stat }) => {\n\tconst statClass = classNames('d2-item-stat', {\n\t\t'corrupted': stat.corrupted ? true : false,\n\t});\n\tconst rangeSuffix = stat.range\n\t\t? (<span className=\"d2-item-range\">[{stat.range.min} - {stat.range.max}]</span>)\n\t\t: null;\n\n\tif (stat.level !== undefined) {\n\t\treturn (\n\t\t\t<span className={statClass}>{stat['chance%']}% to {stat.skill} {stat.name}{rangeSuffix}</span>\n\t\t);\n\t}\n\n\tconst value = (() => {\n\t\tif (stat.min !== undefined) {\n\t\t\treturn <span className=\"d2-item-value\">{stat.min} - {stat.max}</span>;\n\t\t}\n\n\t\treturn stat.value\n\t\t\t? <span className=\"d2-item-value\">{stat.value}</span>\n\t\t\t: null;\n\t})();\n\treturn (\n\t\t<span className={statClass}>{value} {stat.name} {stat.skill ?? null}{rangeSuffix}</span>\n\t);\n};\n\nexport interface D2ItemProps {\n\titem: Item;\n\tsettings: Settings;\n};\n\nconst applySettings = (item: Item, settings: Settings) => {\n\tif (settings.hideQuality[item.quality] === false) {\n\t\treturn true;\n\t}\n\tif (settings.hideSockets[`${item.sockets ?? 0}`] === false) {\n\t\treturn true;\n\t}\n\tif (item.set && settings.hideSets[item.set] === false) {\n\t\treturn true;\n\t}\n\tif (item.type && settings.hideType[item.type] === false) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\nexport const D2Item: FC<D2ItemProps> = ({ item, settings }) => (\n\t<div className={classNames('d2-item', {\n\t\t'hidden': applySettings(item, settings),\n\t})}>\n\t\t<span\n\t\t\tclassName={classNames('d2-item-name clickable', {\n\t\t\t\t'd2-item-eth': item.isEthereal ?? false,\n\t\t\t})}\n\t\t\tonClick={() => console.log(item)}>\n\t\t\t{item.name ?? item.type}\n\t\t\t{item.sockets !== undefined ? ` (${item.sockets})` : ''}\n\t\t\t{item.isEthereal ? ' [eth]' : ''}\n\t\t</span>\n\t\t<span className={classNames('d2-item-props', {\n\t\t\t'hidden': settings.hideProps,\n\t\t})}>\n\t\t\t<span className=\"d2-item-stat d2-item-type subtle\">{item.type}</span>\n\t\t\t{item.defense && <span className=\"d2-item-stat\">Defense: <span className=\"d2-item-value\">{item.defense}</span></span>}\n\t\t\t{(item.stats ?? []).map((stat, i) => (\n\t\t\t\t<ItemStat stat={stat} key={i} />\n\t\t\t))}\n\t\t</span>\n\t</div>\n);","export type Quality = 'Magic' | 'Unique' | 'Set' | 'Normal';\n\nexport interface Stat {\n\tname: string;\n\n\t// Skills?\n\tskill?: string;\n\n\t// Proc\n\t'chance%'?: number;\n\tlevel?: number;\n\n\t// Value\n\tvalue?: number;\n\n\t// Range\n\trange?: { min: number, max: number };\n\n\t// Damage range\n\tmin?: number;\n\tmax?: number;\n\n\t// Corrupted flag\n\tcorrupted?: number;\n};\n\nexport interface SocketItem {\n\tiLevel: number;\n\tquality: Quality;\n\ttype: string;\n\tisGem?: boolean;\n\tisRune?: boolean;\n}\n\nexport interface Item {\n\tname?: string;\n\tiLevel: number;\n\tquality: Quality;\n\ttype: string;\n\tstats?: Stat[];\n\n\t// Based on type\n\tdefense?: number;\n\tsockets?: number;\n\tsocketed?: SocketItem[];\n\tisEthereal?: boolean;\n\n\t// Set item\n\tset?: string;\n\n\t// Runeword\n\truneword?: string;\n\tisRuneword?: boolean;\n};\n\nexport const defaultSettings = () => ({\n\thideProps: false,\n\thideType: {} as Record<string, boolean>,\n\thideQuality: {} as Record<string, boolean>,\n\thideSets: {} as Record<string, boolean>,\n\thideSockets: {} as Record<string, boolean>,\n});\n\nexport type Settings = ReturnType<typeof defaultSettings>;\n\n\nexport const emptyStats = () => ({\n\ttypes: new Map<string, number>(),\n\tqualities: new Map<string, number>(),\n\tsets: new Map<string, number>(),\n\tsockets: new Map<string, number>(),\n\tcount: 0,\n});\nexport type Stats = ReturnType<typeof emptyStats>;\n\nconst tally = (map: Map<string, number>, value: string) => {\n\tmap.set(\n\t\tvalue,\n\t\t(map.get(value) ?? 0) + 1\n\t);\n};\n\nexport const computeStats = (item: Item, mutStat: Stats = emptyStats()) => {\n\ttally(mutStat.types, item.type);\n\ttally(mutStat.qualities, item.quality);\n\tif (item.set) tally(mutStat.sets, item.set);\n\ttally(mutStat.sockets, `${item.sockets ?? 0}`);\n\tmutStat.count++;\n\treturn mutStat;\n};\n","import { Dispatch, FC, SetStateAction, useMemo, useState } from 'react';\nimport './App.css';\nimport { useDropzone } from 'react-dropzone';\nimport { useAsync } from 'react-use';\nimport { D2Item } from './D2Item';\nimport classNames from 'classnames';\nimport { defaultSettings, computeStats, emptyStats } from './util';\nimport type { Settings, Item, Stats } from './util';\n\ninterface FileLoad<T, E> {\n  file: File;\n  value?: T;\n  error?: E;\n};\n\ninterface StashProps {\n  stash: FileLoad<Item[], any>;\n  settings: Settings;\n};\n\nconst Stash: FC<StashProps> = ({ stash, settings }) => {\n  const [collapse, setCollapse] = useState(false);\n  return (\n    <div className=\"stash\">\n      <h3 className=\"stash-owner clickable\" onClick={() => setCollapse(!collapse)}>\n        {stash.file.name}\n        <span style={{\n          float: 'right',\n        }}>{collapse ? 'Show' : 'Hide'}</span>\n      </h3>\n      {stash.error && <span className=\"stash-error\">Oh no! {String(stash.error)}</span>}\n      <span className={classNames('stash-items', {\n        'hidden': collapse,\n      })}>\n        {(stash.value ?? []).map(\n          (item, idx) => <D2Item item={item} key={idx} settings={settings} />\n        )}\n      </span>\n    </div>\n  );\n};\n\ninterface FilterMenuProps {\n  settings: Settings;\n  setSettings: Dispatch<SetStateAction<Settings>>;\n  stats: Stats;\n}\n\nconst toId = (str: string) => str.toLowerCase().replace(/\\W+/, ' ').replace(' ', '-');\n\ninterface VarFilterProps {\n  prefix: string;\n  map: Map<string, number>;\n  toggles: Record<string, boolean>;\n  onToggle: (value: string, newValue: boolean) => void;\n}\n\nconst VarFilter: FC<VarFilterProps> = ({ prefix, map, toggles, onToggle }) => (\n  <>\n    {[...map.entries()].map(([value, count], i) => (\n      <div key={i}>\n        <label htmlFor={`${prefix}-${toId(value)}`}>\n          <input\n            type=\"checkbox\"\n            id={`${prefix}-${toId(value)}`}\n            checked={toggles[value] ?? true}\n            onChange={() => onToggle(value, !(toggles[value] ?? true))} />\n          {value} <span className=\"subtle\">({count})</span>\n        </label>\n      </div>\n    ))}\n  </>\n);\n\nconst FilterMenu: FC<FilterMenuProps> = ({ settings, setSettings, stats }) => {\n  return (\n    <>\n      <h3>Filter Menu</h3>\n      <div>{stats.count} items</div>\n      <div>\n        <label htmlFor=\"setting-hide-props\">\n          <input type=\"checkbox\" id=\"setting-hide-props\" checked={settings.hideProps} onChange={() => setSettings({ ...settings, hideProps: !settings.hideProps })} />\n          Hide Props\n        </label>\n      </div>\n\n      <h4>Qualities</h4>\n      <VarFilter\n        prefix=\"setting-toggle-quality\"\n        map={stats.qualities}\n        toggles={settings.hideQuality}\n        onToggle={(type, newVal) => setSettings({\n          ...settings,\n          hideQuality: {\n            ...settings.hideQuality,\n            [type]: newVal\n          }\n        })}\n      />\n\n      <h4>Sockets</h4>\n      <VarFilter\n        prefix=\"setting-toggle-sockets\"\n        map={stats.sockets}\n        toggles={settings.hideSockets}\n        onToggle={(type, newVal) => setSettings({\n          ...settings,\n          hideSockets: {\n            ...settings.hideSockets,\n            [type]: newVal\n          }\n        })}\n      />\n\n      <h4>Sets</h4>\n      <VarFilter\n        prefix=\"setting-toggle-sets\"\n        map={stats.sets}\n        toggles={settings.hideSets}\n        onToggle={(type, newVal) => setSettings({\n          ...settings,\n          hideSets: {\n            ...settings.hideSets,\n            [type]: newVal\n          }\n        })}\n      />\n\n      <h4>Types</h4>\n      <VarFilter\n        prefix=\"setting-toggle-type\"\n        map={stats.types}\n        toggles={settings.hideType}\n        onToggle={(type, newVal) => setSettings({\n          ...settings,\n          hideType: {\n            ...settings.hideType,\n            [type]: newVal\n          }\n        })}\n      />\n    </>\n  );\n};\n\nfunction App() {\n  const [settings, setSettings] = useState(defaultSettings());\n\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    open,\n  } = useDropzone({\n    accept: 'text/plain, application/json',\n    noClick: true,\n    noKeyboard: true,\n  });\n\n  const { loading, error, value } = useAsync(() => {\n    // Load files\n    const promises = acceptedFiles.map(file => new Promise<FileLoad<Item[], any>>((res) => {\n      const reader = new FileReader();\n      reader.onload = evt => {\n        if (evt.target) {\n          try {\n            res({\n              file,\n              value: JSON.parse(String(evt.target.result)),\n            });\n          } catch (error) {\n            res({\n              file,\n              error,\n            });\n          }\n        }\n      };\n      reader.onerror = () => {\n        res({\n          file,\n          error: reader.error,\n        });\n        reader.abort();\n      };\n      reader.readAsText(file);\n    }));\n\n    // Settle load\n    return Promise.all(promises);\n  }, [acceptedFiles]);\n\n  const stats = useMemo(() => {\n    if (!value) {\n      return emptyStats();\n    }\n\n    return value.flatMap(\n      v => v.value ?? []\n    ).reduce(\n      (acc, item) => computeStats(item, acc),\n      emptyStats()\n    );\n  }, [value]);\n\n  // console.log(settings, stats);\n\n  return (\n    <div className=\"App\">\n      <div {...getRootProps()} className=\"drop-zone\">\n        <input {...getInputProps()} />\n        <p>{isDragActive ? 'drop files' : 'drop stash folder / export files'}</p>\n        <button type=\"button\" onClick={open}>Open Stash Files</button>\n      </div>\n      <div className={classNames('results-window', {\n        'hidden': !value || value.length <= 0\n      })}>\n        <div className=\"stash-results\">\n          {loading ? 'Loading...' : ''}\n          {error && JSON.stringify(error)}\n          {value && value.map((stash, i) => (\n            <Stash key={i} stash={stash} settings={settings} />\n          ))}\n        </div>\n        <div className=\"filter-menu\">\n          <FilterMenu stats={stats} settings={settings} setSettings={setSettings} />\n        </div>\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}